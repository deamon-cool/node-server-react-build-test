{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/UI/Input/Input.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","containers/Layout/Layout.css","assests/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Auth/Auth.css","high-order-components/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","config-fetch.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backDrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","connect","state","auth","token","useState","sideDrawerIsVisible","setSideDrawIsVisible","Content","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","propTypes","PropTypes","string","isRequired","burger","transformIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","React","memo","modalClosed","Modal","transform","opacity","prevProps","nextProps","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchasedContinued","spinner","Loader","config","url","authSuccess","userId","idToken","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","setPurchasing","ings","useSelector","burgerBuilder","totalPrice","useDispatch","onInitIngredients","useCallback","fetch","method","headers","then","res","json","data","catch","err","useEffect","purchaseCancelHandler","disabledInfo","orderSummary","ingName","ingredientName","sum","actions","history","push","checkoutSummary","CheckoutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","inputElement","inputClasses","InputElement","warning","invalid","shouldValidate","touched","Invalid","Warning","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","loading","order","onOrderBurger","orderData","init","body","JSON","stringify","id","orderId","purchaseBurgerSuccess","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","orderForm","setOrderForm","formIsValid","setFormIsValid","formElementsArray","form","onSubmit","event","preventDefault","formData","formElementID","formElement","inputID","updatedOrderForm","updatedFormElement","target","rules","isValid","trim","checkValidity","inID","inputChangedHandler","ContactData","purchased","summary","purchasedRedirect","goBack","replace","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","onFetchOrders","fetchedOrders","buildingBurger","building","authRedirect","authRedirectPath","onAuth","password","isSignup","authData","returnSecureToken","console","log","expirationDate","Date","getTime","expiresIn","setItem","localId","onSetAuthRedirectPath","isEmail","setControls","setIsSignup","test","isNumeric","formEl","controlName","updatedControls","errorMessage","message","Auth","onLogout","withRouter","onTryAutoSignup","getItem","routes","Checkout","Orders","Logout","Boolean","window","location","hostname","initState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","updateObject","oldObj","updatedProps","authStart","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac1f62bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"HuxZPfsTQk6kf8ScsD35c\",\"BreadTop\":\"_10-cTAWgqIPt0kctF6Bmth\",\"Seeds1\":\"_3xHtzMBSXqXFtyL2Kkf3Gu\",\"Seeds2\":\"_1cUso01mEhPiOvVew6u076\",\"Meat\":\"_13nANrA0F7BA6yWg1cuxyQ\",\"Cheese\":\"_1FxeY1KKtrGNpRoQOfCofJ\",\"Salad\":\"_1iTJEGGLnCbWNIyCGWETEe\",\"Bacon\":\"_3vrAI2Ovef69xUC2be2Tib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_21TuB0Dn6JJ4uEYkpf9Fnt\",\"Open\":\"_1pVYRaiLBtOhv7pDNimBtN\",\"Close\":\"_3Yv1lLM58kyRaR73W22KWZ\",\"Logo\":\"_3TkPvMPv1WUzP1NgAUT6zE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"s67N0w35nKdhFxX_3zncw\",\"Label\":\"_n-1my-7YxR9EuzWR3hhB\",\"InputElement\":\"_2-aFxd6_SUnHTHpTf8dvYS\",\"Invalid\":\"_1sl1p7M77V1I9nxTQviKpw\",\"Warning\":\"_1adClrp-pvDubYAnTxZpFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1jYc3QBtl-VmgIWdCI3dgO\",\"Label\":\"_33Z-plxrqIneM7Mz2ytOp0\",\"Less\":\"_377MJOSYo2UYjMj1U14k03\",\"More\":\"_28-hQFZzubxjJbKbVayD5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_2JJW-ZloCsemWXc-SwluYI\",\"Logo\":\"_1efBDQJDXv28ttI2RtLXHD\",\"DesktopOnly\":\"WADUdqFzcPCSrUAJGFXrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_23bcunS9Qq8yRK8U15WWqn\",\"active\":\"_2zJdO1aspVrGyx-JgFjMYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"_3_01fOopnX44ubS-oaxkTR\",\"OrderButton\":\"myBwTggVYuoTSZ0phsfQj\",\"enable\":\"_3jYIqaQjQmo_d3HEVAUYmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"QI7b2B9HFdWRqXJlhx5ZF\",\"Success\":\"_2dHUtYmIiKVpRl3omZjpfb\",\"Danger\":\"_2xnhNuUUklZ_76EhvNOs5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_2fWdXx73utokZkSQg8nql-\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_19WaN2tuJCY7yX7kGD_ZBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_yd_dZzBcrRT8NyTlYD_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_26to0rZE2eHfVYZs2qTwFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"efy1yH85jAELhES8l7b-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_3K4F-Qd9PP5cwDxK60_fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_32_-amvWF8w07UmzDeLfZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"_1DDwYTkbvNoVwBDs8ZptVg\",\"load3\":\"_3wkyiZSYyg2Di5C16AAkyy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_1xBm4j5hECL-q6sCIhiBB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_1J81rlRO5zxuF98VMkEamZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"_2YUr1vYMbwujw6K1HuakLc\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assests/images/burger-logo.png';\r\nimport classes from './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt='MyBurger' />\r\n    </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            activeClassName={classes.active}\r\n            exact>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/'>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated\r\n            ? <NavigationItem link='/orders'>Orders</NavigationItem>\r\n            : null\r\n        }\r\n        {!props.isAuthenticated\r\n            ? <NavigationItem link='/auth'>Authenticate</NavigationItem>\r\n            : <NavigationItem link='/logout'>Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from \"react\";\r\nimport classes from './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle}\r\n        onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.css';\r\n\r\nconst backDrop = (props) => (\r\n    props.show ? <div\r\n        className={classes.Backdrop}\r\n        onClick={props.clicked}></div> : null\r\n)\r\n\r\nexport default backDrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../high-order-components/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../high-order-components/Auxiliary';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nfunction Layout(props) {\r\n    const [sideDrawerIsVisible, setSideDrawIsVisible] = useState(false);\r\n\r\n    const sideDrawClosedHandler = () => {\r\n        setSideDrawIsVisible(false);\r\n    }\r\n\r\n    const sideDrawerToggleHandler = () => {\r\n        setSideDrawIsVisible(!sideDrawerIsVisible);\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Toolbar\r\n                isAuth={props.isAuthenticated}\r\n                drawerToggleClicked={sideDrawerToggleHandler} />\r\n            <SideDrawer\r\n                isAuth={props.isAuthenticated}\r\n                open={sideDrawerIsVisible}\r\n                closed={sideDrawClosedHandler} />\r\n            <main className={classes.Content}>\r\n                {props.children}\r\n            </main>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Layout);","import React from 'react';\r\nimport classes from './BurgerIngredient.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction BurgerIngredient(props) {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])]\r\n                .map((_, i) => {\r\n                    return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n                });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n\r\n    if (transformIngredients.length === 0) {\r\n        transformIngredients = <p>Please start adding ingredients</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type='bread-top' />\r\n            {transformIngredients}\r\n            <BurgerIngredient type='bread-bottom' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            className={classes.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>Less</button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' }\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        {controls.map(control => {\r\n            return <BuildControl\r\n                key={control.label}\r\n                label={control.label}\r\n                added={() => props.ingredientAdded(control.type)}\r\n                removed={() => props.ingredientRemoved(control.type)}\r\n                disabled={props.disabled[control.type]} />\r\n        })}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth\r\n                ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../high-order-components/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nfunction Modal(props) {\r\n    return (\r\n        <Aux>\r\n            <Backdrop\r\n                show={props.show}\r\n                clicked={props.modalClosed} />\r\n            <div\r\n                className={classes.Modal}\r\n                style={{\r\n                    transform: props.show ?\r\n                        'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: props.show ? '1' : '0'\r\n                }}>\r\n                {props.children}\r\n            </div >\r\n\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default React.memo(Modal, (prevProps, nextProps) => {\r\n    return nextProps.show === prevProps.show &&\r\n        nextProps.children === prevProps.children;\r\n});","import React from 'react';\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../../high-order-components/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nfunction OrderSummary(props) {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n                <li key={igKey}>\r\n                    <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {props.ingredients[igKey]}\r\n                </li>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Your's Burger ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: ${props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button\r\n                btnType=\"Danger\"\r\n                clicked={props.purchaseCanceled}>CANCEL</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.purchasedContinued}>CONTINUE</Button>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","const config = {\r\n    url: 'https://burger-builder-d0207.firebaseio.com/'\r\n}\r\n\r\nexport default config;","import * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC4NOAuGRsfAEm27jdqQkNFEcWWxiG_EzM';\r\n\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC4NOAuGRsfAEm27jdqQkNFEcWWxiG_EzM'\r\n        }\r\n\r\n        const init = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(authData)\r\n        };\r\n\r\n        fetch(url, init)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                if (data.error) {\r\n                    dispatch(authFail(data.error));\r\n                } else {\r\n                    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\r\n\r\n                    localStorage.setItem('token', data.idToken);\r\n                    localStorage.setItem('expirationDate', expirationDate);\r\n                    localStorage.setItem('userId', data.localId)\r\n\r\n                    dispatch(authSuccess(data.idToken, data.localId));\r\n                    dispatch(checkAuthTimeout(data.expiresIn));\r\n                }\r\n            }).catch(err => {\r\n                dispatch(authFail(err));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENTS';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENTS';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Aux from '../../high-order-components/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nfunction BurgerBuilder(props) {\r\n    const [purchasing, setPurchasing] = useState(false);\r\n\r\n    const ings = useSelector(state => state.burgerBuilder.ingredients);\r\n    const totalPrice = useSelector(state => state.burgerBuilder.totalPrice);\r\n    const error = useSelector(state => state.burgerBuilder.error);\r\n    const isAuthenticated = useSelector(state => state.auth.token !== null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onIngredientAdded = (ingName) => dispatch(actions.addIngredient(ingName));\r\n    const onIngredientRemoved = (ingName) => dispatch(actions.removeIngredinet(ingName));\r\n    const onInitIngredients = useCallback(() => dispatch(actions.fetchInitIngredients()), [dispatch]);\r\n    const onInitPurchase = () => dispatch(actions.purchaseInit());\r\n    const onSetAuthRedirectPath = (path) => dispatch(actions.setAuthRedirectPath(path));\r\n\r\n    useEffect(() => {\r\n        onInitIngredients();\r\n    }, [onInitIngredients]);\r\n\r\n    function updatePurchase(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n\r\n        return sum > 0;\r\n    }\r\n\r\n    const purchaseHandler = () => {\r\n        if (isAuthenticated) {\r\n            setPurchasing(true);\r\n        } else {\r\n            onSetAuthRedirectPath('/checkout');\r\n            props.history.push('/auth');\r\n        }\r\n    };\r\n\r\n    const purchaseCancelHandler = () => {\r\n        setPurchasing(false);\r\n    };\r\n\r\n    const purchaseContinueHandler = () => {\r\n        onInitPurchase();\r\n        props.history.push('/checkout');\r\n    };\r\n\r\n    const disabledInfo = {\r\n        ...ings\r\n    };\r\n\r\n    for (let key in disabledInfo) {\r\n        disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n\r\n    let orderSummary = error ? 'Network error' : null;\r\n    let burger = error ?\r\n        'Network error. Ingredients can\\'t be loaded' : <Spinner />;\r\n\r\n    if (ings) {\r\n        burger = (\r\n            <Aux>\r\n                <Burger ingredients={ings} />\r\n                <BuildControls\r\n                    ingredientAdded={onIngredientAdded}\r\n                    ingredientRemoved={onIngredientRemoved}\r\n                    disabled={disabledInfo}\r\n                    purchasable={updatePurchase(ings)}\r\n                    ordered={purchaseHandler}\r\n                    isAuth={isAuthenticated}\r\n                    price={totalPrice} />\r\n            </Aux>\r\n        );\r\n\r\n        if (!error && purchasing) {\r\n            orderSummary = <OrderSummary\r\n                ingredients={ings}\r\n                purchaseCanceled={purchaseCancelHandler}\r\n                purchasedContinued={purchaseContinueHandler}\r\n                price={totalPrice} />;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Modal\r\n                show={purchasing || error}\r\n                modalClosed={purchaseCancelHandler}>\r\n                {orderSummary}\r\n            </Modal>\r\n            {burger}\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default BurgerBuilder;","import * as actionTypes from './actionTypes';\r\nimport config from '../../config-fetch';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredinet = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredient = (ingedients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingedients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const fetchInitIngredients = () => {\r\n    return dispatch => {\r\n        const init = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n\r\n        fetch(config.url + 'ingredients.json', init)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch(setIngredient(data));\r\n            }).catch(err => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport config from '../../config-fetch';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        const init = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(orderData)\r\n        };\r\n\r\n        fetch(config.url + 'orders.json?auth=' + token, init)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch(purchaseBurgerSuccess(data.name, orderData));\r\n            })\r\n            .catch(err => {\r\n                dispatch(purchaseBurgerFail(err));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n\r\n        const init = {\r\n            method: 'get',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n\r\n        const queryParams = '?auth=' + token\r\n            + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n\r\n        fetch(config.url + 'orders.json' + queryParams, init)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const fetchedOrders = [];\r\n                for (let key in data) {\r\n                    fetchedOrders.push({\r\n                        ...data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    }\r\n\r\n};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastest well !</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button\r\n                btnType='Danger'\r\n                clicked={props.onCheckoutCancelled}>CANCEL</Button>\r\n            <Button\r\n                btnType='Success'\r\n                clicked={props.onCheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    let warning = null;\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n        warning = <div\r\n            className={classes.Warning}>You typed wrong {props.elementType}</div>\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option\r\n                            key={option.value}\r\n                            value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig} value={props.value} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {warning}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.css';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nfunction ContactData(props) {\r\n    const [orderForm, setOrderForm] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Your Name'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        street: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Your Street'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        zipCode: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'ZIP Code'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 5,\r\n                maxLength: 5\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        country: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Country'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Your Email'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        deliveryMethod: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [\r\n                    { value: 'fastest', displayValue: 'Fastest' },\r\n                    { value: 'cheapest', displayValue: 'Cheapest' },\r\n                ]\r\n            },\r\n            value: 'fastest',\r\n            validation: {},\r\n            valid: true\r\n        }\r\n    });\r\n\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    const orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementID in orderForm) {\r\n            formData[formElementID] = orderForm[formElementID].value;\r\n        }\r\n\r\n        const order = {\r\n            ingredients: props.ings,\r\n            price: props.totalPrice,\r\n            orderData: formData,\r\n            userId: props.userId\r\n        }\r\n\r\n        props.onOrderBurger(order, props.token);\r\n    }\r\n\r\n    const checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = (value.length >= rules.minLength) && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = (value.length <= rules.maxLength) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const inputChangedHandler = (event, inputID) => {\r\n        const updatedOrderForm = {\r\n            ...orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputID]\r\n        };\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputID] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let inID in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inID].valid && formIsValid;\r\n        }\r\n\r\n        setOrderForm(updatedOrderForm);\r\n        setFormIsValid(formIsValid);\r\n    }\r\n\r\n\r\n    const formElementsArray = [];\r\n    for (let key in orderForm) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: orderForm[key]\r\n        });\r\n    }\r\n\r\n    let form = (\r\n        <form onSubmit={orderHandler}>\r\n            {formElementsArray.map(formElement => (\r\n                <Input\r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event) => inputChangedHandler(event, formElement.id)} />\r\n            ))}\r\n            <Button\r\n                btnType='Success'\r\n                disabled={!formIsValid}>ORDER</Button>\r\n        </form>\r\n    );\r\n    if (props.loading) {\r\n        form = <Spinner />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.ContactData}>\r\n            <h1>Enter your Contact</h1>\r\n            {form}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nfunction Checkout(props) {\r\n    const checkoutCancellHandler = () => {\r\n        props.history.goBack();\r\n    }\r\n\r\n    const checkoutContinueHandler = () => {\r\n        props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n\r\n    let summary = <Redirect to='/' />\r\n    if (props.ings) {\r\n        const purchasedRedirect = props.purchased ? <Redirect to='/' /> : null;\r\n        summary = (\r\n            <div>\r\n                {purchasedRedirect}\r\n                <CheckoutSummary\r\n                    onCheckoutCancelled={checkoutCancellHandler}\r\n                    onCheckoutContinued={checkoutContinueHandler}\r\n                    ingredients={props.ings} />\r\n                <Route\r\n                    path={props.match.url + '/contact-data'}\r\n                    component={ContactData} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return summary;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.css';\r\n\r\nconst order = (props) => {\r\n    let ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            key={ig.name}\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price.toFixed(2))}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nfunction Orders(props) {\r\n    const { onFetchOrders } = props\r\n\r\n    useEffect(() => {\r\n        props.onFetchOrders(props.token, props.userId);\r\n    }, [onFetchOrders]);\r\n\r\n    let orders = <Spinner />;\r\n    if (!props.loading) {\r\n        orders = props.orders.map(order => (\r\n            <Order\r\n                key={order.id}\r\n                ingredients={order.ingredients}\r\n                price={+order.price} />\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {orders}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nfunction Auth(props) {\r\n    const [controls, setControls] = useState({\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Mail Address'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n    });\r\n    const [isSignup, setIsSignup] = useState(true);\r\n\r\n    const { buildingBurger, authRedirectPath, onSetAuthRedirectPath } = props;\r\n\r\n    useEffect(() => {\r\n        if (!props.buildingBurger\r\n            && props.authRedirectPath !== '/') {\r\n            props.onSetAuthRedirectPath();\r\n        }\r\n    }, [buildingBurger, authRedirectPath, onSetAuthRedirectPath]);\r\n\r\n    const inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...controls,\r\n            [controlName]: {\r\n                ...controls[controlName],\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n\r\n        setControls(updatedControls);\r\n    }\r\n\r\n    const checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = (value.length >= rules.minLength) && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = (value.length <= rules.maxLength) && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onAuth(controls.email.value,\r\n            controls.password.value, isSignup);\r\n    }\r\n\r\n    const switchAuthModeHandler = () => {\r\n        setIsSignup(!isSignup)\r\n    }\r\n\r\n    const formElementsArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key]\r\n        });\r\n    }\r\n\r\n    let form = formElementsArray.map(formEl => (\r\n        <Input\r\n            key={formEl.id}\r\n            elementType={formEl.config.elementType}\r\n            elementConfig={formEl.config.elementConfig}\r\n            value={formEl.config.value}\r\n            invalid={!formEl.config.valid}\r\n            shouldValidate={formEl.config.validation}\r\n            touched={formEl.config.touched}\r\n            changed={(event) => inputChangedHandler(event, formEl.id)} />\r\n    ));\r\n\r\n    if (props.loading) {\r\n        form = <Spinner />;\r\n    }\r\n\r\n    let errorMessage = null;\r\n\r\n    if (props.error) {\r\n        errorMessage = (\r\n            <p>{props.error.message}</p>\r\n        );\r\n    }\r\n\r\n    let authRedirect = null;\r\n    if (props.isAuthenticated) {\r\n        authRedirect = <Redirect to={props.authRedirect} />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Auth}>\r\n            {authRedirect}\r\n            {errorMessage}\r\n            <form onSubmit={submitHandler}>\r\n                {form}\r\n                <Button btnType='Success'>SUBMIT</Button>\r\n            </form>\r\n            <Button\r\n                clicked={switchAuthModeHandler}\r\n                btnType='Danger'>SWITCH TO SIGN {isSignup ? 'IN' : 'UP'}</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirect: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nfunction Logout(props) {\r\n    const { onLogout } = props;\r\n\r\n    useEffect(() => {\r\n        props.onLogout();\r\n    }, [onLogout]);\r\n\r\n    return <Redirect to='/' />;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useEffect } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Lauout from './containers/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport * as actions from './store/actions/index';\r\n\r\nfunction App(props) {\r\n  const { onTryAutoSignup } = props;\r\n\r\n  useEffect(() => {\r\n    props.onTryAutoSignup();\r\n  }, [onTryAutoSignup]);\r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path='/auth' component={Auth} />\r\n      <Route path='/' exact component={BurgerBuilder} />\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  );\r\n\r\n  if (props.isAuthenticated) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path='/checkout' component={Checkout} />\r\n        <Route path='/orders' component={Orders} />\r\n        <Route path='/logout' component={Logout} />\r\n        <Route path='/' exact component={BurgerBuilder} />\r\n        <Redirect to='/' />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Lauout>\r\n        {routes}\r\n      </Lauout>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.3,\r\n    cheese: 0.7,\r\n    meat: 1.4,\r\n    bacon: 0.8\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat,\r\n                },\r\n                totalPrice: 4,\r\n                error: false,\r\n                building: false\r\n            };\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                orders: action.orders\r\n            };\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const updateObject = (oldObj, updatedProps) => {\r\n    return {\r\n        ...oldObj,\r\n        ...updatedProps\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath: action.path\r\n    });\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}